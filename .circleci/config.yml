version: 2.1

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  frontend:
    type: boolean
    default: false
  backend:
    type: boolean
    default: false

jobs:
  trigger-workflows:
    docker:
      - image: circleci/node:12.14.0
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/cirlcleci_trigger.sh && .circleci/cirlcleci_trigger.sh

  build-frontend:
    docker:
      - image: circleci/node:12.14.0

    working_directory: ~/project

    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build Public
          command: yarn workspace frontend deploy
      - persist_to_workspace:
          root: ./frontend
          paths:
            - out

  deploy-frontend:
    docker:
      - image: circleci/node:12.14.0

    steps:
      - checkout

      - attach_workspace:
        at: ./frontend

      - run:
          name: install netlify cli
          command: sudo npm install netlify-cli -g
      - run:
          name: Netlify Deploy
          command: netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --dir=./frontend/out -p
          # command: netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN  -p

workflows:
  version: 2
  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows

  frontend:
    when: << pipeline.parameters.frontend >>
    jobs:
      - build-frontend
      - deploy-frontend:
          filters:
            branches:
              only:
                - master
          requires:
            - build-frontend
  # build-and-deploy:
  #   jobs:
  #     - build
  #     - deploy-prod:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #         requires:
  #           - build
